<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jij.marimoss.main.mapper.MainMapper">

	<!-- 전체 게시글 숫자 세기 -->
	<select id="selectBoardCount">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
	</select>
  	
  	
  	<!-- 조건 상위 12개 가져오기 -->
  	<select id="selectBoardList">
		SELECT 
		  B.BOARD_NO,
		  BOARD_TITLE,
		  BOARD_IMG_PATH,
		  BOARD_IMG_ORIGIN,
		  BOARD_IMG_RENAME,
		  B.MEMBER_NO,
		  (SELECT COUNT(*)
		   FROM "LIKE"
		   WHERE BOARD_NO = B.BOARD_NO
		   AND MEMBER_NO = #{memberNo}) AS "LIKE_FL",
		  COUNT(L.MEMBER_NO) AS LIKE_COUNT

		FROM "BOARD" B
		LEFT JOIN "LIKE" L ON (B.BOARD_NO = L.BOARD_NO)
		WHERE BOARD_DEL_FL = 'N'
		GROUP BY B.BOARD_NO, BOARD_TITLE, BOARD_IMG_PATH,
		  		   BOARD_IMG_ORIGIN, BOARD_IMG_RENAME,
		  		   B.MEMBER_NO
		ORDER BY BOARD_NO DESC
  	</select>
  	
  	
  	<!-- 모달 채우기 게시글 정보 -->
  	<select id="selectBoard">	
		SELECT 
			B.BOARD_NO,
			BOARD_TITLE,
			BOARD_CONTENT,
			BOARD_IMG_PATH,
		  	BOARD_IMG_ORIGIN,
		  	BOARD_IMG_RENAME,
			MEMBER_NICKNAME,
			MEMBER_PROFILE,
			B.MEMBER_NO,
			(SELECT COUNT(*)
		     FROM "LIKE"
		     WHERE BOARD_NO = #{boardNo}
		     AND MEMBER_NO = #{memberNo}) AS "LIKE_FL",
			COUNT(L.MEMBER_NO) AS LIKE_COUNT
		FROM "BOARD" B
		LEFT JOIN "MEMBER" M ON (B.MEMBER_NO = M.MEMBER_NO)
		LEFT JOIN "LIKE" L ON (B.BOARD_NO = L.BOARD_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND B.BOARD_NO = #{boardNo}
		GROUP BY B.BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
				 BOARD_IMG_PATH,
		  		 BOARD_IMG_ORIGIN,
		  		 BOARD_IMG_RENAME, 
		  		 MEMBER_NICKNAME,
		  		 MEMBER_PROFILE,
		  		 B.MEMBER_NO
  	</select>
  	
  	
  	<select id="selectCommentList">
		SELECT
			COMMENT_NO,
			COMMENT_CONTENT,
			COMMENT_WRITE_DATE,
			COMMENT_DEL_FL,
			C.MEMBER_NO AS "MEMBER_NO",
			PARENT_COMMENT_NO,
			MEMBER_NICKNAME,
			MEMBER_PROFILE
		FROM
			"COMMENT" C
		JOIN "MEMBER" M ON M.MEMBER_NO = C.MEMBER_NO
		WHERE
			COMMENT_DEL_FL = 'N'
		AND
		  BOARD_NO = #{boardNo}
		ORDER BY COMMENT_WRITE_DATE DESC
  	</select>
  	
  	
  	
  	
  	
  	<!-- 전체 게시글 숫자 세기 -->
	<select id="selectSearchCount">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND (
			  BOARD_CONTENT LIKE '%' || #{searchKey} || '%'
		   OR BOARD_TITLE LIKE '%' || #{searchKey} || '%'
		)
	</select>
  	
  	
  	<!-- 조건 상위 12개 가져오기 -->
  	<select id="selectSearchList">
		SELECT 
		  B.BOARD_NO,
		  BOARD_TITLE,
		  BOARD_IMG_PATH,
		  BOARD_IMG_ORIGIN,
		  BOARD_IMG_RENAME,
		  B.MEMBER_NO,
		  (SELECT COUNT(*)
		   FROM "LIKE"
		   WHERE BOARD_NO = B.BOARD_NO
		   AND MEMBER_NO = #{memberNo}) AS "LIKE_FL",
		  COUNT(L.MEMBER_NO) AS LIKE_COUNT

		FROM "BOARD" B
		LEFT JOIN "LIKE" L ON (B.BOARD_NO = L.BOARD_NO)
		WHERE BOARD_DEL_FL = 'N'
		AND (
			  BOARD_CONTENT LIKE '%' || #{searchKey} || '%'
		  	  OR BOARD_TITLE LIKE '%' || #{searchKey} || '%'
			)
		GROUP BY B.BOARD_NO, BOARD_TITLE, BOARD_IMG_PATH,
		  		   BOARD_IMG_ORIGIN, BOARD_IMG_RENAME,
		  		   B.MEMBER_NO
		ORDER BY BOARD_NO DESC
  	</select>
  	
  	
  	
  	<!-- 순위 게시글 숫자 세기 -->
	<select id="selectRankCount">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
	    <choose>
	        <when test="rankTime == 'monthly'">
				AND TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM') = TO_CHAR(CURRENT_DATE, 'YYYY-MM')
	        </when>
	        <when test="rankTime == 'weekly'">
	        <![CDATA[
				AND( 
						BOARD_WRITE_DATE >= TRUNC(CURRENT_DATE, 'IW') 
				  AND 
				  		BOARD_WRITE_DATE < TRUNC(CURRENT_DATE, 'IW') + 7) 
			]]>
	        </when>

			<when test="rankTime == 'allTime'">
	        </when>
	    </choose>
	</select>
  	
  	
  	<!-- 순위 상위 12개 가져오기 -->
  	<select id="selectRankList">
		SELECT 
		
		  B.BOARD_NO,
		  BOARD_TITLE,
		  BOARD_IMG_PATH,
		  BOARD_IMG_ORIGIN,
		  BOARD_IMG_RENAME,
		  B.MEMBER_NO,
		  (SELECT COUNT(*)
		   FROM "LIKE"
		   WHERE BOARD_NO = B.BOARD_NO
		   AND MEMBER_NO = #{memberNo}) AS "LIKE_FL",
		  COUNT(L.MEMBER_NO) AS LIKE_COUNT,
		  ROW_NUMBER() OVER (ORDER BY COUNT(L.MEMBER_NO) DESC) "RNUM"

		FROM "BOARD" B
		LEFT JOIN "LIKE" L ON (B.BOARD_NO = L.BOARD_NO)
		WHERE BOARD_DEL_FL = 'N'
		<choose>
	        <when test="rankTime == 'monthly'">
				AND TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM') = TO_CHAR(CURRENT_DATE, 'YYYY-MM')
	        </when>
	        <when test="rankTime == 'weekly'">
	        <![CDATA[
				AND( 
						BOARD_WRITE_DATE >= TRUNC(CURRENT_DATE, 'IW') 
				  AND 
				  		BOARD_WRITE_DATE < TRUNC(CURRENT_DATE, 'IW') + 7) 
			]]>
	        </when>

			<when test="rankTime == 'allTime'">
	        </when>
	    </choose>
		GROUP BY B.BOARD_NO, BOARD_TITLE, BOARD_IMG_PATH,
		  		   BOARD_IMG_ORIGIN, BOARD_IMG_RENAME,
		  		   B.MEMBER_NO
		ORDER BY RNUM ASC, B.BOARD_NO DESC
  	</select>
  	
  	
  	
</mapper>
